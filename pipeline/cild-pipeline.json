{
	"name": "cild-pipeline",
	"properties": {
		"activities": [
			{
				"name": "Pre Scripts",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(length(pipeline().parameters.PreCopyScripts),1)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Pre Script Wait",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Pre Script Exec",
							"type": "Script",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "sql_op_db1_ls",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@pipeline().parameters.PreCopyScripts",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					]
				}
			},
			{
				"name": "Copy data",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Updating the Mapping",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ExcelSource",
						"additionalColumns": [
							{
								"name": "FileName",
								"value": "$$FILENAME"
							}
						],
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "SqlServerSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"value": "@json(string(replace(variables('mapping'),'\\\"' ,'\"' )))",
						"type": "Expression"
					}
				},
				"inputs": [
					{
						"referenceName": "Excel2",
						"type": "DatasetReference",
						"parameters": {
							"filePath": {
								"value": "@pipeline().parameters.FilePath",
								"type": "Expression"
							},
							"fileName": {
								"value": "@pipeline().parameters.FileName",
								"type": "Expression"
							},
							"ScheetName": {
								"value": "@pipeline().parameters.SheetName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SqlServerTable7",
						"type": "DatasetReference",
						"parameters": {
							"tableSchema": {
								"value": "@pipeline().parameters.TableSchema",
								"type": "Expression"
							},
							"tableName": {
								"value": "@pipeline().parameters.TableName",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Post Scripts",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Copy data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(length(pipeline().parameters.PostCopyScripts),1)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Post Script Wait",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Post Script Exec",
							"type": "Script",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "sql_op_db1_ls",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@pipeline().parameters.PostCopyScripts",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					]
				}
			},
			{
				"name": "Mapping",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Pre Scripts",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderStoredProcedureName": "[dbo].[usp_createMapping]",
						"storedProcedureParameters": {
							"sourceSheet": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.SheetName",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SqlServerTable8",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Updating the Mapping",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Mapping",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "mapping",
					"value": {
						"value": "@replace(activity('Mapping').output.value[0].mapping,'\\\"','\"')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Archive Data",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Post Scripts",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"deleteFilesAfterCompletion": true
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "Binary3",
						"type": "DatasetReference",
						"parameters": {
							"FilePath": {
								"value": "@pipeline().parameters.FilePath",
								"type": "Expression"
							},
							"FileName": {
								"value": "@pipeline().parameters.FileName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "Binary4",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Updating data_Transfer_Details",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Archive Data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "sql_op_db1_ls",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('update data_Transfer_Details set isactive=''0'', lastModifiedDate=cast(getdate() as date) where SourceSchema=''',pipeline().parameters.SheetName,'''')",
								"type": "Expression"
							}
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"parameters": {
			"PreCopyScripts": {
				"type": "string"
			},
			"PostCopyScripts": {
				"type": "string"
			},
			"FileName": {
				"type": "string"
			},
			"SheetName": {
				"type": "string"
			},
			"TableSchema": {
				"type": "string"
			},
			"TableName": {
				"type": "string"
			},
			"FilePath": {
				"type": "string"
			}
		},
		"variables": {
			"mapping": {
				"type": "String"
			}
		},
		"folder": {
			"name": "adls-to-op-mapping"
		},
		"annotations": []
	}
}